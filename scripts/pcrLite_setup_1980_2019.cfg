#-configuration input file for the pcrLite hydrological model
# Rens van Beek, Dept. Physical Geography, Utrecht University
#
# NOTES:
# -information is organized per section ('[section name]'); some sections are parts of listed entries
# -comma separated- as introduced under the section '[general model settings]', found directly below
#  nested lists are to be separated by semi-colons, e.g., nestedList= 1,2;3,4 => [[1,2],[3,4]];
# -paths should be given as absolute references
#  and separated by forward slashes following python's convention;
# -comments can be included when preceded by '#'; ideally, comments on the provenance of data
#  and any additional information should be included at the end of each section;
# -names follow the names in the script and are generally given in camelCase
#
# - all input files can be specified as absolute or relative paths. All relative
#   paths of input files are automatically converted to absolute pathsby adding
#   the generic input path. absolute input paths are left unchanged;
# - all output files are generated automatically on the basis of the provided
#   variable names.
#
# - the following sections are compulsory:
#   general
#   time
#   surfacewater
#   groundwater

###########################################
# Start of the pcrLite configuration file # 
###########################################
[general]
#-general           :   contains general information for this model run
#                       including:
#
# scenarioname      :   descriptive name of model simulation, this should be a
#                       single word string that is used to identify the run.
# inputpath         :   absolute path that identifies the location of all input
#                       files that are identified by their relative paths.
# outputpath        :   absolute path that identifies the location in which the
#                       model is run and where all intermediate and final files
#                       that are produced by the model are stored.
#                       This includes the log file, states and output files in
#                       netCDF format.
# clone             :   file name of the clone map
# cellarea          :   file name of the map with the cell area [m^2]
# 
scenarioname        = default
inputpath           = pcrLite/data_global
outputpath          = pcrLite/_outputs/2015_true
clone               = maps/clone_global_05min.map
cellarea            = maps/cellarea.map

[netcdfattrs]
#-netcdfattrs       : contains information on the global netCDF attributes to
#                     be written to output netCDF files
author              = Oni & Kami

[time]
#-time              : contains information on the time period to be covered by
#                     the model, including:
# startyear         : year in which the simulation starts;
# endyear           : year in which the simulation ends.
# time_increment    : timestep increment to be used; currently: daily, monthly
#                     allowed
startyear           = 2015
endyear             = 2015
time_increment      = monthly


[forcing]
#-forcing          : contains information on the dynamic datasets that are
#                    required to force the pcrLite model.
#                    all data are read dynamically and can be specified as 
#                    rates or totals over the time step increment; values are
#                    specified in units of water slice and are aggregated
#                    by averaging / nearest neighbour operations depending on
#                    whether the source data is finer/ coarser than that of the
#                    model as specified by the clone map.
#
# all values are defined as water slice over the entire cell or over
# the land surface area thereof
# precipitation    : precipitation in waterslice over the entire cell
# refpot_evaporation
# groundwater_recharge
# direct_runoff
# interflow
# irrigation_water_demand
# domesitc_water_demand
# industrial_water_demand
# livestock_water_demand
#
# at the moment domestic, industrial and livestock water demand are read from
# a single netCDF file as is the case in PCR-GLOBWB to provide the gross and net
# water demand for these sectors(Gross, Netto sic); for clarity, these entries
# could be split out here explicitly rather than doing this under the hood in
# the main; however, a lookup table may still be required to manage the various
# variable names in the original netCDF files that could be managed more
# clearly via the cfg file.
#
# totals, rates    : mutually exclusive lists that specify the input that is
#                    provided as a total (i.e., a total depth) or as a rate
#                    (i.e., a flux per day) over the chosen time step;
#                    rates are corrected to a total every time step;
#                    difference ceases to exist if the time step is daily.
precipitation_ncfile               = netcdf/precipitation_monthTot_1979_2019_05arcmin.nc
refpot_evaporation_ncfile          = netcdf/referencePotET_monthTot_1979_2019_05arcmin.nc
groundwater_recharge_ncfile        = netcdf/gwRecharge_monthTot_1979_2019_05arcmin.nc
direct_runoff_ncfile                = netcdf/directRunoff_monthTot_1979_2019_05arcmin.nc
interflow_ncfile                    = netcdf/interflowTotal_monthTot_1979_2019_05arcmin.nc
irrigation_water_demand_ncfile     = netcdf/irrGrossDemand_monthTot_1979_2019_05arcmin.nc
domestic_water_demand_ncfile       = netcdf/domestic_water_demand_1979_2019_m_day_05arcmin.nc
#industrial_water_demand_ncfile    = netcdf/industry_water_demand_1979_2019_m_day_05arcmin.nc
livestock_water_demand_ncfile      = netcdf/livestock_water_demand_1979_2019_m_day_05arcmin.nc
manufacture_water_demand_ncfile    = netcdf/manufacture_water_demand_1979_2019_m_day_05arcmin.nc
thermoelectric_water_demand_ncfile = netcdf/thermoelectric_water_demand_1979_2019_m_day_05arcmin.nc
# totals - sums per timestep - and rates per day
totals = precipitation,refpot_evaporation,groundwater_recharge,direct_runoff,interflow,irrigation_water_demand
#rates  = domestic_water_demand,industrial_water_demand,livestock_water_demand
rates  = domestic_water_demand,livestock_water_demand,manufacture_water_demand,thermoelectric_water_demand

[groundwater]
#-groundwater       : specifies the input for the class describing the ground-
#                     water store.
#
# alpha             : groundwater reservoir constant [day^-1] of the relation
#                     Q = alpha * S; and its default value alpha_default that
#                     is assigned if no data is available.
#
# initial maps of the following states and variables
# total_baseflow_ini      : initial base flow from the cell as a total, e.g per
# groundwater_storage_ini : initial storage of the groundwater store [m waterslice]
#
alpha                   = maps/groundwater_alpha.map
alpha_default           = 0.01
total_base_flow_ini     = initial/total_base_flow.nc
groundwater_storage_ini = initial/groundwater_storage.nc

[surfacewater]
# ldd                : local drainage direction map [-]
# fraction_water     : fractional fresh water surface area [m^2/m^2]
# water_cropfactor   : crp
# channel_gradient   : gradient along the channel [m/m]
# channel_width      : width for a rectangular channel [m]
# channel_depth      : channel depth at bankful discharge [m]
# channel_length     : channel length [m]
# mannings_n         : manning's coefficient [m^-1/3*s]
# surfacewater_storage_ini:
#                     initial storage of the groundwater store [m waterslice]
#
ldd                      = maps/ldd.map
fraction_water           = maps/fraction_water.map
water_cropfactor         = 1.10
channel_gradient         = maps/channel_gradient.map
channel_width            = maps/channel_width.map
channel_depth            = maps/channel_depth.map
channel_length           = maps/channel_length.map
mannings_n               = 0.03
surfacewater_storage_ini = initial/surfacewater_storage.nc

[water_management]
#-water management      : specifies the input for the class that manages the 
#                         water use through allocation and withdrawal.
#                         Currently, only surface water and groundwater are
#                         considered but this can be expanded to include desal-
#                         inated water too.
#                         Also, it assumed that each cell receives water
#                         from a predined set of points for one resource only,
#                         i.e., zones are mutually exclusive per resource.
#                         At the moment, all withdrawal points are fixed in
#                         time and the withdrawal capacity is not considered.
# 
# sector_names                      : names of the sectors to be analyse
# time_increment                    : timestep increment to be used;
#                                     currently only monthly and yearly allowed;
# surfacewater_allocation_zones,
# groundwater_allocation_zones      : nominal map with the ID of the allocation
#                                     zone per resource identified by non-zero
#                                     values;
# surfacewater_withdrawal_points,
# groundwater_withdrawal_points     : map with the withdrawal points falling 
#                                     in a zone; this should be an ordinal map
#                                     that gives each point a unique ID and
#                                     that can be used to track local with-
#                                     drawals and assign the withdrawal capac-
#                                     ity.
# surfacewater_withdrawal_capacity,
# groundwater_withdrawal_capacity   : the capacity [m^3/day] to withdraw water
#                                     from the resource specified. Currently,
#                                     this can only be None, in which case the
#                                     abstraction is unlimited or set to a pre-
#                                     defined rate at the location. If with-
#                                     drawal points were to become dynamic,
#                                     this could be linked to the allocated
#                                     demand and capped by a pre-defined capac-
#                                     ity per region, as currenly is done in
#                                     PCR-GLOBWB 2 with the groundwater pumping
#                                     capacity.
# surfacewater_update_weight,
# groundwater_update_weight         : weight, defined as 1/N years, by which
#                                     the long-term average water availability,
#                                     abstractions and return flows are updat-
#                                     ed with the current conditions [year^-1],
#                                     weight should be greater than 0 and less
#                                     than 1.
#
# Long-term averages per month need to be provided for the following variables
# as monthly netCDFs; the values are in total volumes per time step (e.g., [m3/month]):
# surfacewater_longterm_availability_ini : long-term average monthly surface water
#                                          availability [m3/day]
# groundwater_longterm_availability_ini  : long-term average groundwater availab-
#                                          ility [m3/day]
# prioritization_flag                    : boolean indicating if sectors are prioritized

# sectors to analyse (irrigation,domestic,industry,livestock,manufacture,thermoelectric)
sector_names = irrigation,domestic,livestock,manufacture,thermoelectric

# temporal settings
#time_increment                             = monthly
time_increment                             = yearly

# other water management options
# pump capacity and update weight
surfacewater_withdrawal_capacity           = None
surfacewater_update_weight                 = 0.5
groundwater_withdrawal_capacity            = None
groundwater_update_weight                  = 0.5
regional_pumping_capacity                  = netcdf/original/regional_pumping_capacity_1980_2019.nc

# initial conditions, long-term availability and initial return flows
groundwater_longterm_availability_ini      = initial/groundwater_longterm_availability.nc
surfacewater_longterm_availability_ini     = initial/surfacewater_longterm_availability.nc
total_return_flow_ini                      = initial/total_return_flow.nc

# sectoral prioritization
prioritization_surfacewater_irrigation     = 1
prioritization_surfacewater_livestock      = 1
prioritization_surfacewater_domestic       = 1
prioritization_surfacewater_industry       = 1
prioritization_surfacewater_manufacture    = 1
prioritization_surfacewater_thermoelectric = 1

prioritization_groundwater_irrigation      = 1
prioritization_groundwater_livestock       = 1
prioritization_groundwater_domestic        = 1
prioritization_groundwater_industry        = 1
prioritization_groundwater_manufacture     = 1
prioritization_groundwater_thermoelectric  = 1

# standard PCR-GLOBWB allocation settings
surfacewater_allocation_zones              = maps/abstraction_zones_60min_05min.map
surfacewater_withdrawal_points             = maps/abstraction_by_cells.map
groundwater_allocation_zones               = maps/abstraction_zones_60min_05min.map
groundwater_withdrawal_points              = maps/abstraction_by_cells.map

[water_quality]
# evaluation of water quality
# surface water temperature, biochemical oxigen demand, total dissolved solids, fecal coliforms
water_quality_flag = True

# initial conditions, long-term availability and initial return flows
surfacewater_longterm_temperature_ini = initial/surfacewater_longterm_temperature.nc
surfacewater_longterm_organic_ini     = initial/surfacewater_longterm_organic.nc
surfacewater_longterm_salinity_ini    = initial/surfacewater_longterm_salinity.nc
surfacewater_longterm_pathogen_ini    = initial/surfacewater_longterm_pathogen.nc

# water quality constituent input files
surfacewater_temperature_ncfile = netcdf/waterTemperature_monthlyAvg_1979_2019.nc
surfacewater_organic_ncfile     = netcdf/organic_monthlyAvg_1979_2019.nc
surfacewater_salinity_ncfile    = netcdf/salinity_monthlyAvg_1979_2019.nc
surfacewater_pathogen_ncfile    = netcdf/pathogen_monthlyAvg_1979_2019.nc

# water constituents' threshold values
# - Surface Water Temperature (oC)
limit_temperature_irrigation     = None
limit_temperature_livestock      = None
limit_temperature_domestic       = None
limit_temperature_industry       = 30.
limit_temperature_manufacture    = 30.
limit_temperature_thermoelectric = maps/limit_temperature_thermoelectric_global_05arcmin.map
#limit_temperature_thermoelectric = 30.
# - Biochemical Oxigen Demand (mg/L)
limit_organic_irrigation         = 15.
limit_organic_livestock          = None
limit_organic_domestic           = 5.
limit_organic_industry           = 30.
limit_organic_manufacture        = 30.
limit_organic_thermoelectric     = 30.
# - Total Dissolved Solid (mg/L)
limit_salinity_irrigation        = 450.
limit_salinity_livestock         = None
limit_salinity_domestic          = 600.
limit_salinity_industry          = 7000.
limit_salinity_manufacture       = 7000.
limit_salinity_thermoelectric    = 7000.
# - Feacal Coliforms (cfu/100ml)
limit_pathogen_irrigation        = None
limit_pathogen_livestock         = None
limit_pathogen_domestic          = 1000
limit_pathogen_industry          = None
limit_pathogen_manufacture       = None
limit_pathogen_thermoelectric    = None

[reporting]
# comma-separated lists should be provided. No whitespace is allowed in the
# string with output variables that should match the names in the reporting module and should be entered on a single line
nc_format                    = NETCDF4
zlib                         = True
daily_tot                    = None
monthly_avg                  = None
monthly_tot                  = demand_domestic_allocated_to_renewable_surfacewater,demand_manufacture_allocated_to_renewable_surfacewater,demand_thermoelectric_allocated_to_renewable_surfacewater,demand_irrigation_allocated_to_renewable_surfacewater,demand_livestock_allocated_to_renewable_surfacewater,demand_domestic_allocated_to_renewable_groundwater,demand_manufacture_allocated_to_renewable_groundwater,demand_thermoelectric_allocated_to_renewable_groundwater,demand_irrigation_allocated_to_renewable_groundwater,demand_livestock_allocated_to_renewable_groundwater,demand_domestic_allocated_to_nonrenewable_groundwater,demand_manufacture_allocated_to_nonrenewable_groundwater,demand_thermoelectric_allocated_to_nonrenewable_groundwater,demand_irrigation_allocated_to_nonrenewable_groundwater,demand_livestock_allocated_to_nonrenewable_groundwater,withdrawal_domestic_allocated_to_renewable_surfacewater,withdrawal_manufacture_allocated_to_renewable_surfacewater,withdrawal_thermoelectric_allocated_to_renewable_surfacewater,withdrawal_irrigation_allocated_to_renewable_surfacewater,withdrawal_livestock_allocated_to_renewable_surfacewater,withdrawal_domestic_allocated_to_renewable_groundwater,withdrawal_manufacture_allocated_to_renewable_groundwater,withdrawal_thermoelectric_allocated_to_renewable_groundwater,withdrawal_irrigation_allocated_to_renewable_groundwater,withdrawal_livestock_allocated_to_renewable_groundwater,withdrawal_domestic_allocated_to_nonrenewable_groundwater,withdrawal_manufacture_allocated_to_nonrenewable_groundwater,withdrawal_thermoelectric_allocated_to_nonrenewable_groundwater,withdrawal_irrigation_allocated_to_nonrenewable_groundwater,withdrawal_livestock_allocated_to_nonrenewable_groundwater
yearly_tot                   = None
overwrite_initial_conditions = True

#///end of configuration file///
